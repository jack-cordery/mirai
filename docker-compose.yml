services:
  app:
    container_name: mirai-api
    build:
      context: .
      dockerfile: Dockerfile
    image: mirai-api
    ports:
      - 8000:8000
    environment:
        DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@psql:5432/${POSTGRES_DB}?sslmode=disable
        APP_URL: http://localhost:5173
        RANDOM_HEX: ${RANDOM_HEX}
    depends_on:
      - migrate
    networks:
      - go-network

  psql:
    container_name: mirai-psql
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - go-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 3

  migrate:
    image: migrate/migrate
    depends_on:
      psql:
        condition: service_healthy
    networks:
      - go-network
    volumes:
      - ./db/migrations/:/migrations
    command: ["-path", "/migrations/", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@psql:5432/${POSTGRES_DB}?sslmode=disable", "up"]

volumes:
  pgdata: {}

networks:
  go-network:
    driver: bridge
